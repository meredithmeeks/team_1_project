install.packages("boot", dependencies = TRUE)
library(boot)
}
if (!require("AICcmodavg")) {
install.packages("AICcmodavg", dependencies = TRUE)
library(AICcmodavg)
}
if (!require("lubridate")) {
install.packages("lubridate", dependencies = TRUE)
library(lubridate)
}
if (!require("randomForest")) {
install.packages("randomForest", dependencies = TRUE)
library(randomForest)
}
Confrontations <- read.csv("AllViolenceData_170216.csv")
Confrontations$date <- as.Date(Confrontations$date)
# take out global.id, event.id, unix.timestamp
Confrontations <- Confrontations[ , -c(which(colnames(Confrontations) == "global.id"),
which(colnames(Confrontations) == "event.id"),
which(colnames(Confrontations) == "unix.timestamp"))]
str(Confrontations)
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
summary(casualties_present <- glm(anycasualties ~ army + navy + federal.police + municipal.police + afi + ministerial.police +
army:navy + navy:municipal.police + army:municipal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
casualties_present$coefficients
# marginal effects
#interaction_plot_binary(casualties_present, effect = "army", moderator = "navy", interaction = "army:navy")
funinteff(casualties_present, army)
funinteff(casualties_present, "army")
funinteff(casualties_present, "army:navy")
funinteff(casualties_present, "anycasualties")
summary(casualties_present <- glm(anycasualties ~ army + navy + federal.police + municipal.police + afi + ministerial.police +
army:navy + navy:municipal.police + army:municipal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
casualties_present$coefficients
casualties_present$coefficients["army"]
marginal_effect_army <- casualties_present$coefficients["army"] + casualties_present$coefficients["army:navy"]
moderator <- c(0, 1)
covMat = varcov
covMat = vcov(casualties_present)
var_army <- covMat[casualties_present$coefficients["army"], casualties_present$coefficients["army"]] + (moderator^2)*covMat[casualties_present$coefficients["army:navy"], casualties_present$coefficients["army:navy"]] +
2*moderator*covMat[casualties_present$coefficients["army"], casualties_present$coefficients["army:navy"]]
covMat
var_army <- covMat["army", "army"] + (moderator^2)*covMat["army:navy", "army:navy"] +
2*moderator*covMat["army", "army:navy"]
se_army = sqrt(var_army)
marginal_effect_army <- casualties_present$coefficients["army"] + casualties_present$coefficients["army:navy"]*moderator
civ_oc_wounded <- Confrontations$organized.crime.wounded + Confrontations$civilian.wounded
Confrontations_2 <- cbind(Confrontations, civ_oc_wounded)
ggplot(Confrontations_2, aes(civ_oc_wounded)) +
geom_bar(fill = "white", colour = "darkgreen") + theme_bw() +
xlab("Civilians and Organized Crime Wounded") + ylab("Count") +
facet_wrap(~ perfect.lethality)
# mean
mean(Confrontations_2$civ_oc_wounded)
# variance
var(Confrontations_2$civ_oc_wounded)
# randomForest algorithm
set.seed(34593475)
# may have to use rfImpute to impute missing values but dropping for now
Confrontations_nafix <- Confrontations[ , apply(Confrontations, 2, function(x) !any(is.na(x)))]
rf <- randomForest(x = Confrontations_nafix[ , -which(colnames(Confrontations_nafix) == "civilian.dead")],
y = Confrontations_nafix[ , which(colnames(Confrontations_nafix) == "civilian.dead")],
ntree = 100, importance = TRUE, proximity = TRUE)
rf
plot(rf$mse)
varImpPlot(rf, main = "Variance Importance Plot",
cex = .6, pt.cex = .8, pch = 6)
# randomForest algorithm
set.seed(34593475)
# may have to use rfImpute to impute missing values but dropping for now
Confrontations_nafix <- Confrontations[ , apply(Confrontations, 2, function(x) !any(is.na(x)))]
rf <- randomForest(x = Confrontations_nafix[ , -which(colnames(Confrontations_nafix) == "civilian.dead")],
y = Confrontations_nafix[ , which(colnames(Confrontations_nafix) == "civilian.dead")],
ntree = 1000, importance = TRUE, proximity = TRUE)
rf
plot(rf$mse)
varImpPlot(rf, main = "Variance Importance Plot",
cex = .6, pt.cex = .8, pch = 6)
summary(Confrontations_nafix$civilian.dead)
knitr::opts_chunk$set(echo = TRUE)
unique(Confrontations_cat$army)
moderator <- unique(Confrontations_cat$army)
moderator <- c(0, 1)
str(Confrontations)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police:navy +
municipal.police:army +
municipal.police:federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police:navy +
municipal.police:army +
municipal.police:federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_munipolice_navy <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator
marginal_munipolice_army <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator
marginal_munipolice_fedpolice <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
marginal_munipolice_navy <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator)
marginal_munipolice_army <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator)
marginal_munipolice_fedpolice <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator)
marginal_munipolice_army
se_army
table(marginal_effect_army, se_army)
table(cbind(marginal_effect_army, se_army))
print(marginal_effect_army, se_army)
army <- matrix(marginal_effect_army, se_army)
army <- matrix(cbind(marginal_effect_army, se_army))
army <- matrix(cbind(marginal_effect_army, se_army), ncol = 2)
army
marginal_effect_army
army
army <- matrix(rbind(marginal_effect_army, se_army), ncol = 2)
army
marginal_effect_army
army <- matrix(rbind(marginal_effect_army, se_army), ncol = 2, colnames("no army", "army involved"), row.names("marginal effect", "standard error"))
colnames(army) <- c("no army", "army involved")
row.names(army) <- c("marginal effect", "standard error")
army
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police:navy +
municipal.police:army +
municipal.police:federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator)
marginal_army <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator)
marginal_fedpolice <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator)
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(army) <- c("no navy", "involving navy")
row.names(army) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(army) <- c("no army", "army involved")
row.names(army) <- c("marginal effect", "standard error")
army
navy
fedpolice
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police:navy +
municipal.police:army +
municipal.police:federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator)
marginal_army <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator)
marginal_fedpolice <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator)
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
army
navy
fedpolice
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator)
marginal_army <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator)
marginal_fedpolice <- exp(casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator)
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
army
navy
fedpolice
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator
marginal_army <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator
marginal_fedpolice <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
army
navy
fedpolice
if (!require("dplyr")) {
install.packages("dplyr", dependencies = TRUE)
library(dplyr)
}
if (!require("tidyr")) {
install.packages("tidyr", dependencies = TRUE)
library(tidyr)
}
if (!require("ggplot2")) {
install.packages("ggplot2", dependencies = TRUE)
library(ggplot2)
}
if (!require("readr")) {
install.packages("readr", dependencies = TRUE)
library(readr)
}
if (!require("pscl")) {
install.packages("pscl", dependencies = TRUE)
library(pscl)
}
if (!require("MASS")) {
install.packages("MASS", dependencies = TRUE)
library(MASS)
}
if (!require("boot")) {
install.packages("boot", dependencies = TRUE)
library(boot)
}
if (!require("AICcmodavg")) {
install.packages("AICcmodavg", dependencies = TRUE)
library(AICcmodavg)
}
if (!require("lubridate")) {
install.packages("lubridate", dependencies = TRUE)
library(lubridate)
}
if (!require("randomForest")) {
install.packages("randomForest", dependencies = TRUE)
library(randomForest)
}
Confrontations <- read.csv("AllViolenceData_170216.csv")
Confrontations$date <- as.Date(Confrontations$date)
# take out global.id, event.id, unix.timestamp
# these unimformative variables may influence the models
Confrontations <- Confrontations[ , -c(which(colnames(Confrontations) == "global.id"),
which(colnames(Confrontations) == "event.id"),
which(colnames(Confrontations) == "unix.timestamp"))]
# str(Confrontations)
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator
marginal_army <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator
marginal_fedpolice <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
army
navy
fedpolice
exp(army[1,])/(1 + exp(army[1,]))
exp(casualties_present$coefficients["municipal.police"]) +
exp(casualties_present$coefficients["municipal.police:navy"])*moderator
exp(marginal_navy)
summary(casualties_present <- lm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
summary(casualties_present <- lm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
data = Confrontations_cat))
covMat = vcov(exp(casualties_present))
covMat = vcov(casualties_present)
exp(covMat)
covMat
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
covMat = vcov(exp(casualties_present))
covMat = vcov(ecasualties_present)
covMat = vcov(casualties_present)
covMat
exp(covMat)
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
