casualties_present$coefficients["municipal.police:federal.police"]*moderator)
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
army
navy
fedpolice
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator
marginal_army <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator
marginal_fedpolice <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
army
navy
fedpolice
if (!require("dplyr")) {
install.packages("dplyr", dependencies = TRUE)
library(dplyr)
}
if (!require("tidyr")) {
install.packages("tidyr", dependencies = TRUE)
library(tidyr)
}
if (!require("ggplot2")) {
install.packages("ggplot2", dependencies = TRUE)
library(ggplot2)
}
if (!require("readr")) {
install.packages("readr", dependencies = TRUE)
library(readr)
}
if (!require("pscl")) {
install.packages("pscl", dependencies = TRUE)
library(pscl)
}
if (!require("MASS")) {
install.packages("MASS", dependencies = TRUE)
library(MASS)
}
if (!require("boot")) {
install.packages("boot", dependencies = TRUE)
library(boot)
}
if (!require("AICcmodavg")) {
install.packages("AICcmodavg", dependencies = TRUE)
library(AICcmodavg)
}
if (!require("lubridate")) {
install.packages("lubridate", dependencies = TRUE)
library(lubridate)
}
if (!require("randomForest")) {
install.packages("randomForest", dependencies = TRUE)
library(randomForest)
}
Confrontations <- read.csv("AllViolenceData_170216.csv")
Confrontations$date <- as.Date(Confrontations$date)
# take out global.id, event.id, unix.timestamp
# these unimformative variables may influence the models
Confrontations <- Confrontations[ , -c(which(colnames(Confrontations) == "global.id"),
which(colnames(Confrontations) == "event.id"),
which(colnames(Confrontations) == "unix.timestamp"))]
# str(Confrontations)
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator
marginal_army <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator
marginal_fedpolice <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
army
navy
fedpolice
exp(army[1,])/(1 + exp(army[1,]))
exp(casualties_present$coefficients["municipal.police"]) +
exp(casualties_present$coefficients["municipal.police:navy"])*moderator
exp(marginal_navy)
summary(casualties_present <- lm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
summary(casualties_present <- lm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
data = Confrontations_cat))
covMat = vcov(exp(casualties_present))
covMat = vcov(casualties_present)
exp(covMat)
covMat
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
covMat = vcov(exp(casualties_present))
covMat = vcov(ecasualties_present)
covMat = vcov(casualties_present)
covMat
exp(covMat)
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
knitr::opts_chunk$set(echo = TRUE)
if (!require("dplyr")) {
install.packages("dplyr", dependencies = TRUE)
library(dplyr)
}
if (!require("tidyr")) {
install.packages("tidyr", dependencies = TRUE)
library(tidyr)
}
if (!require("ggplot2")) {
install.packages("ggplot2", dependencies = TRUE)
library(ggplot2)
}
if (!require("readr")) {
install.packages("readr", dependencies = TRUE)
library(readr)
}
if (!require("pscl")) {
install.packages("pscl", dependencies = TRUE)
library(pscl)
}
if (!require("MASS")) {
install.packages("MASS", dependencies = TRUE)
library(MASS)
}
if (!require("boot")) {
install.packages("boot", dependencies = TRUE)
library(boot)
}
if (!require("AICcmodavg")) {
install.packages("AICcmodavg", dependencies = TRUE)
library(AICcmodavg)
}
if (!require("lubridate")) {
install.packages("lubridate", dependencies = TRUE)
library(lubridate)
}
if (!require("randomForest")) {
install.packages("randomForest", dependencies = TRUE)
library(randomForest)
}
Confrontations <- read.csv("AllViolenceData_170216.csv")
Confrontations$date <- as.Date(Confrontations$date)
# take out global.id, event.id, unix.timestamp
# these unimformative variables may influence the models
Confrontations <- Confrontations[ , -c(which(colnames(Confrontations) == "global.id"),
which(colnames(Confrontations) == "event.id"),
which(colnames(Confrontations) == "unix.timestamp"))]
# str(Confrontations)
# recode category variables
table(Confrontations$category)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
# run logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator
marginal_army <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator
marginal_fedpolice <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
army
navy
fedpolice
table(Confrontations$municipal.police, Confrontations$navy)
table(Confrontations$municipal.police, Confrontations$army)
table(Confrontations$municipal.police, Confrontations$federal.police)
table(Confrontations$municipal.police)
table(Confrontations$municipal.police, Confrontations$state.police)
table(Confrontations$municipal.police, Confrontations$navy)
table(Confrontations$anycasualties)
Confrontations_cat <- Confrontations
Confrontations_cat$anycasualties <- ifelse(Confrontations_cat$category == "no.dead.wounded",
"No", "Yes")
Confrontations_cat$anycasualties <- as.factor(Confrontations_cat$anycasualties)
table(Confrontations$category)
table(Confrontations$anycasualties)
table(Confrontations_cat$category)
table(Confrontations_cat$anycasualties)
2306/3090
2306/5396
table(Confrontations_cat$anycasualties)
table(Confrontations_cat$anycasualties, Confrontations$municipal.police)
# fir a logit model
summary(casualties_present <- glm(anycasualties ~ municipal.police + army + navy + federal.police +
afi + ministerial.police + state.police +
municipal.police*navy +
municipal.police*army +
municipal.police*federal.police,
family = binomial(link = "logit"), data = Confrontations_cat))
# create moderator object with all unique values of conditional variables
# in our case, moderator is (0,1) for all cases
moderator <- c(0, 1)
names(moderator) <- c("not involved", "involved")
# obtain covariance matrix from the logit model for calculations
covMat = vcov(casualties_present)
# marginal effects
marginal_navy <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:navy"]*moderator
marginal_army <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:army"]*moderator
marginal_fedpolice <- casualties_present$coefficients["municipal.police"] +
casualties_present$coefficients["municipal.police:federal.police"]*moderator
# variances
var_navy <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:navy", "municipal.police:navy"] +
2*moderator*covMat["municipal.police", "municipal.police:navy"]
var_army <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:army", "municipal.police:army"] +
2*moderator*covMat["municipal.police", "municipal.police:army"]
var_fedpolice <- covMat["municipal.police", "municipal.police"] +
(moderator^2)*covMat["municipal.police:federal.police", "municipal.police:federal.police"] +
2*moderator*covMat["municipal.police", "municipal.police:federal.police"]
# standard errors
se_navy = sqrt(var_navy)
se_army = sqrt(var_army)
se_fedpolice = sqrt(var_fedpolice)
# print the results
navy <- matrix(rbind(marginal_navy, se_navy), ncol = 2)
colnames(navy) <- c("no navy", "involving navy")
row.names(navy) <- c("marginal effect", "standard error")
army <- matrix(rbind(marginal_army, se_army), ncol = 2)
colnames(army) <- c("no army", "involving army")
row.names(army) <- c("marginal effect", "standard error")
fedpolice <- matrix(rbind(marginal_fedpolice, se_fedpolice), ncol = 2)
colnames(fedpolice) <- c("no fed police", "involving fed police")
row.names(fedpolice) <- c("marginal effect", "standard error")
navy
army
fedpolice
table(Confrontations$municipal.police, Confrontations$navy)
marginal_effects <- c(navy[1,2], army[1,2], fedpolice[1,2])
marginal_effects <- c(exp(navy[1,2])/(1+exp(navy[1,2])), army[1,2]/(1+exp(army[1,2])), fedpolice[1,2]/(1+exp(fedpolice[1,2])))
ggplot(marginal_effects) +
geom_bar()
marginal_effects <- c(exp(navy[1,1])/(1+exp(navy[1,1])), army[1,2]/(1+exp(army[1,2])), fedpolice[1,2]/(1+exp(fedpolice[1,2])))
names(marginal_effects) <- c("municipal police alone", "army", "federal police")
ggplot(aes(x = marginal_effects)) +
geom_bar()
ggplot(aes(x = marginal_effects)) +
geom_histogram()
marginal_effects <- matrix(c(exp(navy[1,1])/(1+exp(navy[1,1])), army[1,2]/(1+exp(army[1,2])), fedpolice[1,2]/(1+exp(fedpolice[1,2]))))
navy[1,1]
navy[1,2]
names(marginal_effects) <- c("municipal police alone", "army", "federal police")
marginal_effects <- matrix(c(exp(navy[1,1])/(1+exp(navy[1,1])), army[1,2]/(1+exp(army[1,2])), fedpolice[1,2]/(1+exp(fedpolice[1,2]))), nrow = 3)
row.names(marginal_effects) <- c("municipal police alone", "army", "federal police")
colnames(marginal_effects) <- "value"
marginal_effects
ggplot(marginal_effects, aes(x = value)) +
geom_histogram()
marginal_effects <- data.frame(c(exp(navy[1,1])/(1+exp(navy[1,1])), army[1,2]/(1+exp(army[1,2])), fedpolice[1,2]/(1+exp(fedpolice[1,2]))), nrow = 3)
row.names(marginal_effects) <- c("municipal police alone", "army", "federal police")
colnames(marginal_effects) <- "value"
marginal_effects
ggplot(marginal_effects, aes(x = value)) +
geom_histogram()
ggplot(marginal_effects, aes(x = value)) +
geom_bar(stat = "identity")
ggplot(marginal_effects, aes(y = value)) +
geom_bar(stat = "identity")
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity")
exp(navy[1,1])/(1+exp(navy[1,1])
exp(navy[1,1])/(1+exp(navy[1,1]))
marginal_effects
marginal_effects <- data.frame(c(exp(navy[1,1])/(1+exp(navy[1,1])), exp(army[1,2])/(1+exp(army[1,2])), exp(fedpolice[1,2])/(1+exp(fedpolice[1,2]))), nrow = 3)
row.names(marginal_effects) <- c("municipal police alone", "army", "federal police")
colnames(marginal_effects) <- "value"
marginal_effects
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity")
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity") +
labs("Probability of Sustaining Casualties\nwhen Municipal Police Cooperates\nwith Other Agencies",
y = "Probability of Sustaining Casualties",
x = "Municipal Police Cooperation with __") +
theme_gray()
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity") +
labs(title = "Probability of Sustaining Casualties\nwhen Municipal Police Cooperates\nwith Other Agencies",
y = "Probability of Sustaining Casualties",
x = "Municipal Police Cooperation with __") +
theme_gray()
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity") +
labs(title = "Probability of Sustaining Casualtieswhen Municipal Police\nCooperates with Other Agencies",
y = "Probability of Sustaining Casualties",
x = "Municipal Police Cooperation with __") +
theme_gray()
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity") +
labs(title = "Probability of Sustaining Casualtieswhen Municipal Police\nCooperates with Other Agencies",
y = "Probability of Sustaining Casualties",
x = "Cooperating Agency") +
theme_gray()
casualties_present$coefficients
casualties_present$coefficients[1]
intercept <- exp(casualties_present$coefficients[1])
intercept <- exp(casualties_present$coefficients[1])/(1 + exp(casualties_present$coefficients[1]))
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity") +
labs(title = "Probability of Sustaining Casualtieswhen Municipal Police\nCooperates with Other Agencies",
y = "Increase in Probability of Sustaining Casualties",
x = "Cooperating Agency") +
theme_gray()
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity") +
labs(title = "Probability of Sustaining Casualtieswhen Municipal Police\nCooperates with Other Agencies",
y = "Increase in Probability of Sustaining Casualties",
x = "Cooperating Agency") +
theme_bw()
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity") +
labs(title = "Probability of Sustaining Casualtieswhen Municipal Police\nCooperates with Other Agencies",
y = "Increase in Probability of Sustaining Casualties",
x = "Cooperating Agency") +
theme_dark()
ggplot(marginal_effects, aes(x = row.names(marginal_effects), y = value)) +
geom_bar(stat = "identity") +
labs(title = "Probability of Sustaining Casualtieswhen Municipal Police\nCooperates with Other Agencies",
y = "Increase in Probability of Sustaining Casualties",
x = "Cooperating Agency") +
theme_classic()
civ_oc_wounded <- Confrontations$organized.crime.wounded + Confrontations$civilian.wounded
Confrontations_2 <- cbind(Confrontations, civ_oc_wounded)
ggplot(Confrontations_2, aes(civ_oc_wounded)) +
geom_bar(fill = "white", colour = "darkgreen") + theme_bw() +
xlab("Civilians and Organized Crime Wounded") + ylab("Count") +
facet_wrap(~ perfect.lethality)
# mean
mean(Confrontations_2$civ_oc_wounded)
# variance
var(Confrontations_2$civ_oc_wounded)
moderator <- unique(civ_oc_wounded$arms_seized)
moderator <- unique(Confrontations_2$arms_seized)
moderator <- c(unique(Confrontations_2$arms_seized))
unique(Confrontations_2$arms_seized
(marginal_effect_army_arms <- conditional_ols$coefficients["army"] + conditional_ols$coefficients["army:arms_seized"]*moderator)
# variances
covMat = vcov(conditional_ols)
unique(Confrontations_2$arms_seized
)
#independent variables:
Confrontations_2$arms_seized <- Confrontations_2$long.guns.seized + Confrontations_2$small.arms.seized
#Confrontations_2$cart_clips_seized <- Confrontations_2$cartridge.sezied + Confrontations_2$clips.seized
ols_civ_oc_wounded <- glm(civ_oc_wounded ~ arms_seized + vehicles.seized + army + navy + afi + federal.police + municipal.police + ministerial.police + state.police, Confrontations_2, family="gaussian")
summary(ols_civ_oc_wounded)
unique(Confrontations_2$arms_seized)
sort(unique(Confrontations_2$arms_seized))
moderator <- c(sort(unique(Confrontations_2$arms_seized)))
(marginal_effect_army_arms <- conditional_ols$coefficients["army"] + conditional_ols$coefficients["army:arms_seized"]*moderator)
conditional_ols <- lm(formula = civ_oc_wounded ~ army + arms_seized + clips.seized +
army * arms_seized + army * clips.seized + vehicles.seized +
navy + afi + federal.police + municipal.police +
ministerial.police + state.police,
data = Confrontations_2)
(marginal_effect_army_arms <- conditional_ols$coefficients["army"] + conditional_ols$coefficients["army:arms_seized"]*moderator)
