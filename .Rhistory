knitr::opts_chunk$set(echo = TRUE)
stopifnot(require(tidyverse))
gss <- read.csv(file.choose()) # team_1_project/Data
## subset by those who never married
clean <- gss[which(gss$agewed >= 12 | gss$marital == 5), ]
table(gss$marital == 5)  # 1080 respondents who never married
table(clean$marital == 5)  # still 1080
table(clean$marital == 5, clean$agewed)  # seems about right
length(clean$agewed[clean$marital == 5])  # 1080 NA
sum(is.na(clean$agewed))  # 1080 NA
ggplot(gss, aes(x = marital, y = relig16)) +
geom_jitter()
ggplot(gss, aes(x = relig16, y = marital)) +
geom_boxplot()
ggplot(gss, aes(x = marital)) +
geom_histogram() + facet_grid(. ~ relig16)
ggplot(gss, aes(x = marital, y = agewed)) +
geom_boxplot() + facet_grid(. ~ relig16)
ggplot(gss, aes(x = marital, y = agewed)) +
geom_boxplot() + facet_grid(. ~ religion)
ggplot(gss, aes(x = marital, y = agewed)) +
geom_boxplot() + facet_grid(. ~ relig)
ggplot(gss, aes(x = age, y = agewed)) +
geom_boxplot() + facet_grid(. ~ relig)
ggplot(gss, aes(x = age, y = agewed)) +
geom_jitter() + facet_grid(. ~ relig)
ggploy(gss, aes(x = marital, y = gunlaw)) +
geom_jitter()
ggplot(gss, aes(x = marital, y = gunlaw)) +
geom_jitter()
table(gss$marital, gss$gunlaw)
summary(lm(gunlaw ~ marital, data = gss))
summary(lm(gunlaw ~ agewed, data = gss))
summary(lm(gunlaw ~ age + educ + sex, data = gss))
summary(lm(tvhours ~ agewed + age + educ + sex, data = gss))
summary(lm(tvhours ~ marital + age + educ + sex, data = gss))
knitr::opts_chunk$set(echo = TRUE)
gss <- read.csv(file.choose()) # team_1_project/Data
gss$partyid
table(gss$partyid)
table(gss$partfull)
table(gss$partyid)
names(gss$partyid) <- c("Strong Democrat", "Not Strong Democrat", "Independent near Democrat",
"Independent", "Independent near Republican", "Not Strong Republican",
"Strong Republican", "Other")
table(gss$partyid)
summary(lm(partyid ~ adults + race + reg16 + sex + age + income + union, data = gss))
summary(lm(partyid ~ adults + race + reg16 + sex + age + income + union + childs, data = gss))
summary(lm(partyid ~ adults + as.factor(race) + reg16 + sex + age + income + union + childs, data = gss))
stopifnot(require(ggplot2))
table(gss$reg16)
ggplot(gss, aes(x = partyid, y = reg16)) +
stat_bar(stat = "mean")
ggplot(gss, aes(x = partyid, y = reg16)) +
geom_stat(stat = "mean")
ggplot(gss, aes(x = partyid, y = reg16)) +
geom_bar()
ggplot(gss, aes(x = partyid, y = reg16)) +
geom_bar(stat = "identity")
ggplot(gss, aes(x = partyid, y = reg16)) +
geom_bar(stat = "identity", col = reg16)
ggplot(gss, aes(x = partyid, y = reg16)) +
geom_bar(stat = "identity", col = gss$reg16)
ggplot(gss, aes(x = partyid, y = reg16)) +
geom_bar(stat = "stack")
ggplot(gss, aes(x = partyid, y = reg16)) +
stat_bin()
ggplot(gss, aes(x = partyid, fill = reg16)) +
geom_bar()
table(gss$reg16, gss$partyid)
ggplot(gss, aes(x = partyid, fill = reg16)) +
geom_bar(stat = "count")
ggplot(gss, aes(fill = partyid, x = reg16)) +
geom_bar(stat = "count")
ggplot(gss, aes(x = partyid, fill = as.factor(reg16))) +
geom_bar(stat = "count")
ggplot(gss, aes(x = reg16, fill = as.factor(partyid))) +
geom_bar(stat = "count")
ggplot(gss, aes(x = age, y = partyid)) +
geom_point()
ggplot(gss, aes(x = age)) +
geom_jitter() + facet_wrap(~ partyid)
ggplot(gss, aes(x = age)) +
geom_line() + facet_wrap(~ partyid)
ggplot(gss, aes(x = age, y = partyid)) +
geom_line()
ggplot(gss, aes(x = age)) +
geom_bar()
ggplot(gss, aes(x = age)) +
geom_bar(fill = partyid)
ggplot(gss, aes(x = age)) +
geom_bar(fill = as.factor(partyid))
ggplot(gss, aes(x = age, fill = as.factor(partyid))) +
geom_bar()
ggplot(gss, aes(x = age^2, fill = as.factor(partyid))) +
geom_bar()
ggplot(gss, aes(x = age, fill = as.factor(partyid))) +
geom_bar()
ggplot(gss, aes(x = partyid, fill = as.factor(reg16))) +
geom_bar(stat = "count")
ggplot(gss, aes(x = reg16, fill = as.factor(partyid))) +
geom_bar(stat = "count")
ggplot(gss, aes(x = age)) +
geom_histogram() + face_wrap(~ partyid)
ggplot(gss, aes(x = age)) +
geom_histogram() + facet_wrap(~ partyid)
partynames <- c("Strong Democrat", "Not Strong Democrat", "Independent near Democrat",
"Independent", "Independent near Republican", "Not Strong Republican",
"Strong Republican", "Other")
ggplot(gss, aes(x = age)) +
geom_histogram() +
scale_x_continuous(labels = partynames) +
facet_wrap(~ partyid)
ggplot(gss, aes(x = age)) +
geom_histogram() +
facet_wrap(~ partyid, labeller = partynames)
ggplot(gss, aes(x = age)) +
geom_histogram() +
facet_wrap(~ partyid, label_wrap_gen(partynames))
levels(gss$partyid)
levels(as.factor(gss$partyid))
levels(as.factor(gss$partyid)) <- partynames
gss$partyid <- as.factor(gss$partyid)
levels(gss$partyid) <- partynames
ggplot(gss, aes(x = reg16, fill = partyid)) +
geom_bar(stat = "count")
ggplot(gss, aes(x = age)) +
geom_histogram() +
facet_wrap(~ partyid)
summary(lm(partyid ~ adults + as.factor(race) + reg16 + sex + age + income + union + childs, data = gss))
summary(glm(partyid ~ adults + as.factor(race) + reg16 + sex + age + income + union + childs,
family = "logit", data = gss))
?glm
glm
?glm
summary(glm(partyid ~ adults + as.factor(race) + reg16 + sex + age + income + union + childs,
family = binomial(link = "logit"), data = gss))
summary(glm(partyid ~ adults + as.factor(race) + as.factor(reg16) + as.factor(sex) + age + income + union + as.factor(childs),
family = binomial(link = "logit"), data = gss))
summary(glm((partyid == 2) ~ adults + as.factor(race) + as.factor(reg16) + as.factor(sex) + age + income + union + as.factor(childs),
family = binomial(link = "logit"), data = gss))
summary(glm(as.factor(partyid == 2) ~ adults + as.factor(race) + as.factor(reg16) + as.factor(sex) + age + income + union + as.factor(childs),
family = binomial(link = "logit"), data = gss))
table(gss$partyid == 2)
table(gss$partyid == "Strong Democrat")
summary(glm((party == "Independent near Democrat") ~ adults + as.factor(race) + as.factor(reg16) + as.factor(sex) + age + income + union + as.factor(childs),
family = binomial(link = "logit"), data = gss))
summary(glm((partyid == "Independent near Democrat") ~ adults + as.factor(race) + as.factor(reg16) + as.factor(sex) + age + income + union + as.factor(childs), family = binomial(link = "logit"), data = gss))
